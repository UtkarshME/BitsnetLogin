#!/bin/bash

#
# bitsnet
# Script for logging into the bitsnet
#


login_url=1

#
# Load util functions
#
# shellcheck source=/dev/null
if ! source /usr/local/lib/bitsnet/util.sh > /dev/null
then
    # not found
    echo "Could not load util file"
    echo "Reinstall program"

    notify-send 'BITSnet' "Please reinstall program" \
        --icon=network-transmit --hint=int:transient:1 || \
        echo "Please reinstall program" || exit 1
    exit 1
fi


#
# Add a configuration file
#
if ! grep -s "username\[1\]" ~/.bitsnetrc > /dev/null
then
    # not found
    echo "No bitsnetrc found"

    # create a new bitsnetrc file from the sample file
    echo -n "Creating a bitsnetrc file... "
    if ! cp /usr/local/etc/bitsnet/bitsnetrc ~/.bitsnetrc
    then
        echo "failed"
        exit 1
    else
        echo "done"
    fi
else
    # shellcheck source=/dev/null
    source "$HOME/.bitsnetrc"
fi


#
# if library ip is not loaded, load it
#
if [[ -z $library_ip ]]; then
    library_ip="10.20.0.1"
fi


#
# check if we can find at least one pair of credentials
#
if [[ ${username[1]} == "" ]]
then
    echo "Please add credentials to ~/.bitsnetrc"
    notify-send 'BITSnet' "Please add credentials to ~/.bitsnetrc" \
        --icon=network-transmit --hint=int:transient:1
    exit 1
fi


#
# Parse arguments
#
while getopts "u:p:dhUofwq" o; do
    case "${o}" in
        u)
            username[1]=${OPTARG}
            ;;
        p)
            password[1]=${OPTARG}
            ;;
        d)
            export debug=1
            debug_msg "Going into debug mode"
            ;;
        U)
            update
            ;;
        o)
            log_out
            ;;
        f)
            force=1
            ;;

        w)
            export hostel=1
            ;;
        q)
            export quiet=1
            ;;
        h | * | [?])
            show_help
            exit 1
            ;;
    esac
done


#
# check if login is forced
#
if [[ $force -eq 1 ]]; then
    debug_msg "Forcing login attempt"
fi


#
# display login url for debugging
#
debug_msg "LoginURL: $login_url"


#
# Get device info
#
debug_msg "Checking device info"
dev=$(get_device)
debug_msg "dev = $dev"


#
# Exit if dev is unknown and login attempt is not forced
#
if [[ "$dev" == "" && $force -ne 1 ]]; then
    debug_msg "Exiting because dev is empty."
    debug_msg "Make sure you're connected to a network interface"
    debug_msg "Use -f option if you think this is a mistake"
    send_msg "Network interface unknown." "2000"
    exit 1
else
    case $dev in
        wl* )
            dev_name="wifi";;
        en* )
            dev_name="ethernet";;
    esac
    send_msg "Connecting via $dev_name"
fi


#
# Check and exit if already logged in.
# Skip check if forced
#
if [[ $force -ne 1 ]]; then
    debug_msg "Checking if already connected"
    send_msg "Checking if already connected"
    if wget --quiet --timeout=5 --tries=1 --spider --no-check-certificate \
        --output-file=/dev/null https://google.com
    then
        sleep 1
        send_msg "Already logged into the BITSnet" "2000"
        exit 0
    else
        debug_msg "Not logged in"
        send_msg "Not logged in"
    fi
fi


#
# Log into the ldap
# All ID in the username array from bitsnetrc file are tried
# exit when successful login
#
debug_msg "Logging into the LDAP"
i=1
while [[ ! -z ${username[$i]} ]]
do
    debug_msg "Trying with ID: ${username[$i]}"
    send_msg "Trying with ID: ${username[$i]}"
    reply=$(ldap_login "${username[$i]}" "${password[$i]}")

    # Extract reply
    reply=$(extract_msg "$reply")

    # if logged in, get out
    if [[ "$reply" == "You have successfully logged in" ]]; then
        break
    else
        debug_msg "$reply"
    fi
    ((i++))
done


#
# Display reply or send a notification
#
debug_msg "Reply sent"
sleep 1
send_msg "$reply" "2000"


#
# Exit
#
debug_msg "Bye"
exit 0
